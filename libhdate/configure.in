AC_INIT(src/hdate.h)

dnl Set release number
PACKAGE=libhdate
LIBHDATE_MAJOR_VERSION=1
LIBHDATE_MINOR_VERSION=4
LIBHDATE_MICRO_VERSION=10

VERSION=$LIBHDATE_MAJOR_VERSION.$LIBHDATE_MINOR_VERSION.$LIBHDATE_MICRO_VERSION

dnl libtool library numbering
VERSION_INFO=$LIBHDATE_MAJOR_VERSION:$LIBHDATE_MINOR_VERSION:0

AC_SUBST(VERSION_INFO)

AM_INIT_AUTOMAKE($PACKAGE, $VERSION)
AM_MAINTAINER_MODE

dnl Checks for programs.
AC_ISC_POSIX
AC_GNU_SOURCE
AC_USE_SYSTEM_EXTENSIONS
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_STDC_HEADERS
AM_PROG_LIBTOOL

AM_MAINTAINER_MODE

AC_C_CONST

AC_PATH_PROG(PKG_CONFIG, pkg-config, no)

CFLAGS=
LIBS=-lm

dnl =======================================================================================

AC_CHECK_PROG(have_swig, "swig", yes, no)

dnl =======================================================================================

AC_CHECK_PROG(have_pascal, "fpc", yes, no)

build_pascal=$have_pascal

AC_ARG_ENABLE([pascal], 
  [AS_HELP_STRING([--disable-pascal],
  [do not build pascal binding])],
  [build_pascal=no], [build_pascal=$have_pascal])

pascal_var=$enablevar

if test "$have_pascal" = "yes"; then
	PA_VERSION=`fpc -iV`
	PA_TPR=`fpc -iTP`
	PA_TOS=`fpc -iTO`
	PA_MODULES_PATH="/usr/lib/fpc/$PA_VERSION/units/$PA_TPR-$PA_TOS"
	AC_SUBST([PA_VERSION])
	AC_SUBST([PA_MODULES_PATH])
fi

AM_CONDITIONAL(WITH_PASCAL, test "$build_pascal" = "yes")

dnl =======================================================================================

AC_CHECK_PROG(have_python, "python", yes, no)

build_python=$have_python

AC_ARG_ENABLE([python], 
  [AS_HELP_STRING([--disable-python],
  [do not build python binding])],
  [build_python=no], [build_python=$have_python])

python_var=$enablevar

AC_ARG_WITH(python-sitelib-dir, 
  [AS_HELP_STRING([--with-python-sitelib-dir=PATH],
  [path to python site lib])])

if test "$have_python" = "yes"; then
	  PY_PREFIX=`python -c 'import sys ; print sys.prefix'`
	  PY_VERSION=`python -c 'import sys ; print sys.version[[0:3]]'`
	  AC_MSG_CHECKING(for $PY_PREFIX/include/python$PY_VERSION/Python.h)
	  if test -f $PY_PREFIX/include/python$PY_VERSION/Python.h; then
		  AC_MSG_RESULT(yes)
		  PY_CFLAGS="-I$PY_PREFIX/include/python$PY_VERSION"
		  
		  if test "$with_python_sitelib_dir" = "" ; then
		    PY_MODULES_PATH="$PY_PREFIX/lib/python$PY_VERSION/site-packages"
		  else
		    PY_MODULES_PATH=$with_python_sitelib_dir
		  fi
		  
		  AC_SUBST([PY_VERSION])
		  AC_SUBST([PY_CFLAGS])
		  AC_SUBST([PY_MODULES_PATH])
		  if test "$have_swig" = "no"; then
			build_python=no
		  fi
	  else
		  AC_MSG_RESULT(no)
		  build_python=no
	  fi
fi

AM_CONDITIONAL(WITH_PYTHON, test "$build_python" = "yes")

dnl =======================================================================================

AC_CHECK_PROG(have_perl, "perl", yes, no)

build_perl=$have_perl

AC_ARG_ENABLE([perl], 
  [AS_HELP_STRING([--disable-perl],
  [do not build perl binding])],
  [build_perl=no], [build_perl=$have_perl])

perl_var=$enablevar

AC_ARG_WITH(perl-sitelib-dir, 
  [AS_HELP_STRING([--with-perl-sitelib-dir=PATH],
  [path to perl site lib])])
  
if test "$have_perl" = "yes"; then
	  PE_PREFIX=`(perl -e 'use Config; print $Config{archlib};')`
	  AC_MSG_CHECKING(for $PE_PREFIX/CORE/perl.h)
	  if test -f $PE_PREFIX/CORE/perl.h; then
		  AC_MSG_RESULT(yes)
		  PE_CFLAGS="-I$PE_PREFIX/CORE "
		  PE_CFLAGS=$PE_CFLAGS`(perl -e 'use Config; print $Config{cppflags};')`
		  
		  if test "$with_perl_sitelib_dir" = "" ; then
		    PE_MODULES_PATH=`(perl -e 'use Config; print $Config{sitelib};')`
		  else
		    PE_MODULES_PATH=$with_perl_sitelib_dir
		  fi
		  		  
		  AC_SUBST([PE_CFLAGS])
		  AC_SUBST([PE_MODULES_PATH])
		  if test "x$have_swig" = "xno"; then
			build_perl=no
		  fi
	  else
		  AC_MSG_RESULT(no)
		  build_perl=no
	  fi
fi

AM_CONDITIONAL(WITH_PERL, test "$build_perl" = "yes")

dnl =======================================================================================

dnl gettext

dnl Languages which your application supports
ALL_LINGUAS="he es_MX ru fr sv"
AM_GNU_GETTEXT
AM_GNU_GETTEXT_VERSION(0.10.40)

if test "${prefix}" = "NONE"; then
  AC_DEFINE_UNQUOTED(PACKAGE_LOCALE_DIR, "${ac_default_prefix}/${DATADIRNAME}/locale")
else
  AC_DEFINE_UNQUOTED(PACKAGE_LOCALE_DIR, "${prefix}/${DATADIRNAME}/locale")
fi

dnl =======================================================================================

build_hcal=yes

AC_ARG_ENABLE([hcal], 
  [AS_HELP_STRING([--disable-hcal],
  [do not build hcal/hdate utility programs])],
  [build_hcal=no], [build_hcal=yes])

AM_CONDITIONAL(WITH_HCAL, test "$build_hcal" = "yes")

dnl =======================================================================================

AC_SUBST(CFLAGS)
AC_SUBST(LIBS)

dnl =======================================================================================

AC_OUTPUT([
Makefile
libhdate.pc
intl/Makefile
po/Makefile.in
src/Makefile
examples/Makefile
examples/hcal/Makefile
examples/bindings/Makefile
bindings/Makefile
bindings/python/Makefile
bindings/perl/Makefile
bindings/pascal/Makefile
])

dnl ===========================================================================================

echo "
$PACKAGE-$VERSION

	prefix:				${prefix}
	compiler:			${CC}
	
	have swig			${have_swig}
	have free pascal    		${have_pascal}
	have python			${have_python}
	have perl			${have_perl}
	
	build hcal			${build_hcal}
	
	build python binding		${build_python}
	build perl binding		${build_perl}
	puild pascal binding		${build_pascal}
	
	perl site lib path:		$PE_MODULES_PATH
	python site lib path:		$PY_MODULES_PATH
	pascal site lib path:		$PA_MODULES_PATH
"
